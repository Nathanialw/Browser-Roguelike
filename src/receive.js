import {MakeMap} from './index.js';
export var socket =  new WebSocket("ws://www.saycum.com/ws");

export let map = [];

// for testing start
// let serverMap

// map data
// map = new Array(20).fill().map(() => new Array(20));
// for (let i = 0; i < 20; i++) {
//     for (let j = 0; j < 20; j++) {
//         map[i][j] = serverMap[(i * 20) + j];
//     }
// }
// for testing end

socket.onmessage = function(event) {    
    if (event.data === 0) {
        return
    }

    let type = event.data[0];
    let data = event.data.substring(1);
    
    //message
    if (type === "0") {
        //message
        console.log(data);
    }
    
    //map
    else if (type === "1") {
        let mapWidth = parseInt(data.substring(0, 2), 10);
        let serverMap = data.substring(2);
        // map data
        // map = new Array(mapWidth).fill().map(() => new Array(mapWidth));
        // for (let i = 0; i < mapWidth; i++) {
        //     for (let j = 0; j < mapWidth; j++) {
        //         map[i][j] = serverMap[(i * mapWidth) + j];
        //         console.log(map[i][j]);
        //     }
        // }
        MakeMap(serverMap, mapWidth);
    }

    //ID
    else if (type === "3") {
        let playerID = event.data[0];
    }
    
};
